syntax = "proto3";
package helios.feedistribution.v1;

import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";

option go_package = "helios-core/helios-chain/x/feedistribution/types";

// ContractInfo stores the deployer information for a smart contract
message ContractInfo {
  // contract_address is the hex address of the smart contract
  string contract_address = 1
      [ (cosmos_proto.scalar) = "cosmos.AddressString" ];

  // deployer_address is the bech32 address of the account that deployed the
  // contract
  string deployer_address = 2
      [ (cosmos_proto.scalar) = "cosmos.AddressString" ];

  // withdrawer_address is the bech32 address of the account that can withdraw the fees
  string withdrawer_address = 3
      [ (cosmos_proto.scalar) = "cosmos.AddressString" ];

  // deployment_height is the block height at which the contract was deployed
  int64 deployment_height = 4;
}

// BlockFees stores the accumulated fees for a specific contract in the current
// block
message BlockFees {
  // contract_address is the hex address of the smart contract
  string contract_address = 1;

  // accumulated_fees stores the total fees accumulated for this contract in the
  // current block
  string accumulated_fees = 2 [
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false
  ];
}